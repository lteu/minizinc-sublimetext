{
	"scope": "source.mzn - variable.other.mzn",

	"completions":
	[
		"mzn",

		{ "trigger": "constraint", "contents": "constraint " },
		{ "trigger": "satisfy", "contents": "satisfy" },
		{ "trigger": "minimize", "contents": "minimize" },
		{ "trigger": "maximize", "contents": "maximize" },
		{ "trigger": "float", "contents": "float" },
		{ "trigger": "in", "contents": "in" },
		{ "trigger": "of", "contents": "of" },
		{ "trigger": "int", "contents": "int: " },
		{ "trigger": "list", "contents": "list" },
		{ "trigger": "assert", "contents": "assert(${1:arg});" },
		{ "trigger": "string", "contents": "string: " },
		{ "trigger": "set", "contents": "set" },
		{ "trigger": "var", "contents": "var" },
		{ "trigger": "where", "contents": "where" },
		{ "trigger": "type", "contents": "type" },
		{ "trigger": "if", "contents": "if" },
		{ "trigger": "else", "contents": "else" },
		{ "trigger": "endif", "contents": "endif" },
		{ "trigger": "true", "contents": "true" },
		{ "trigger": "false", "contents": "false" },
		{ "trigger": "min", "contents": "min(${1:arg})" },
		{ "trigger": "max", "contents": "max(${1:arg})" },
		{ "trigger": "include", "contents": "include \"${1:arg}\";" },
		{ "trigger": "output", "contents": "output[${1:arg}];" },
		{ "trigger": "array", "contents": "array[${1:arg}]" },
		{ "trigger": "array2d", "contents": "array2d[]" },
		{ "trigger": "solve", "contents": "solve ${1:arg};" },
		{ "trigger": "forall", "contents": "forall(${1:item} in ${2:range})()" },
		{ "trigger": "fix", "contents": "fix(${1:arg})" },
		{ "trigger": "show", "contents": "show(${1:arg})" }
	]
}
